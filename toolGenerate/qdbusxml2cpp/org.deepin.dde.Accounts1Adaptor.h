/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-session-ui/xml/org.deepin.dde.Accounts1.xml -a ./dde-session-ui/toolGenerate/qdbusxml2cpp/org.deepin.dde.Accounts1Adaptor -i ./dde-session-ui/toolGenerate/qdbusxml2cpp/org.deepin.dde.Accounts1.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ORG_DEEPIN_DDE_ACCOUNTS1ADAPTOR_H
#define ORG_DEEPIN_DDE_ACCOUNTS1ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-session-ui/toolGenerate/qdbusxml2cpp/org.deepin.dde.Accounts1.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.deepin.dde.Accounts1
 */
class Accounts1Adaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.deepin.dde.Accounts1")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.deepin.dde.Accounts1\">\n"
"    <method name=\"AllowGuestAccount\">\n"
"      <arg direction=\"in\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"CreateGuestAccount\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"CreateUser\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"      <arg direction=\"out\" type=\"o\"/>\n"
"    </method>\n"
"    <method name=\"DeleteUser\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"GetGroups\">\n"
"      <arg direction=\"out\" type=\"as\"/>\n"
"    </method>\n"
"    <method name=\"GetPresetGroups\">\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"      <arg direction=\"out\" type=\"as\"/>\n"
"    </method>\n"
"    <method name=\"FindUserById\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"FindUserByName\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"IsPasswordValid\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"IsUsernameValid\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"RandUserIcon\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <signal name=\"UserAdded\">\n"
"      <arg type=\"s\"/>\n"
"    </signal>\n"
"    <signal name=\"UserDeleted\">\n"
"      <arg type=\"s\"/>\n"
"    </signal>\n"
"    <property access=\"read\" type=\"as\" name=\"UserList\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"GuestIcon\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"AllowGuest\"/>\n"
"  </interface>\n"
        "")
public:
    Accounts1Adaptor(QObject *parent);
    virtual ~Accounts1Adaptor();

public: // PROPERTIES
    Q_PROPERTY(bool AllowGuest READ allowGuest)
    bool allowGuest() const;

    Q_PROPERTY(QString GuestIcon READ guestIcon)
    QString guestIcon() const;

    Q_PROPERTY(QStringList UserList READ userList)
    QStringList userList() const;

public Q_SLOTS: // METHODS
    void AllowGuestAccount(bool in0);
    QString CreateGuestAccount();
    QDBusObjectPath CreateUser(const QString &in0, const QString &in1, int in2);
    void DeleteUser(const QString &in0, bool in1);
    QString FindUserById(const QString &in0);
    QString FindUserByName(const QString &in0);
    QStringList GetGroups();
    QStringList GetPresetGroups(int in0);
    bool IsPasswordValid(const QString &in0, QString &out1, int &out2);
    bool IsUsernameValid(const QString &in0, QString &out1, int &out2);
    QString RandUserIcon();
Q_SIGNALS: // SIGNALS
    void UserAdded(const QString &in0);
    void UserDeleted(const QString &in0);
};

#endif
