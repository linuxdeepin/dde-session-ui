/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-session-ui/xml/org.deepin.dde.Accounts1.xml -a ./dde-session-ui/toolGenerate/qdbusxml2cpp/org.deepin.dde.Accounts1Adaptor -i ./dde-session-ui/toolGenerate/qdbusxml2cpp/org.deepin.dde.Accounts1.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-session-ui/toolGenerate/qdbusxml2cpp/org.deepin.dde.Accounts1Adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class Accounts1Adaptor
 */

Accounts1Adaptor::Accounts1Adaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

Accounts1Adaptor::~Accounts1Adaptor()
{
    // destructor
}

bool Accounts1Adaptor::allowGuest() const
{
    // get the value of property AllowGuest
    return qvariant_cast< bool >(parent()->property("AllowGuest"));
}

QString Accounts1Adaptor::guestIcon() const
{
    // get the value of property GuestIcon
    return qvariant_cast< QString >(parent()->property("GuestIcon"));
}

QStringList Accounts1Adaptor::userList() const
{
    // get the value of property UserList
    return qvariant_cast< QStringList >(parent()->property("UserList"));
}

void Accounts1Adaptor::AllowGuestAccount(bool in0)
{
    // handle method call org.deepin.dde.Accounts1.AllowGuestAccount
    QMetaObject::invokeMethod(parent(), "AllowGuestAccount", Q_ARG(bool, in0));
}

QString Accounts1Adaptor::CreateGuestAccount()
{
    // handle method call org.deepin.dde.Accounts1.CreateGuestAccount
    QString out0;
    QMetaObject::invokeMethod(parent(), "CreateGuestAccount", Q_RETURN_ARG(QString, out0));
    return out0;
}

QDBusObjectPath Accounts1Adaptor::CreateUser(const QString &in0, const QString &in1, int in2)
{
    // handle method call org.deepin.dde.Accounts1.CreateUser
    QDBusObjectPath out0;
    QMetaObject::invokeMethod(parent(), "CreateUser", Q_RETURN_ARG(QDBusObjectPath, out0), Q_ARG(QString, in0), Q_ARG(QString, in1), Q_ARG(int, in2));
    return out0;
}

void Accounts1Adaptor::DeleteUser(const QString &in0, bool in1)
{
    // handle method call org.deepin.dde.Accounts1.DeleteUser
    QMetaObject::invokeMethod(parent(), "DeleteUser", Q_ARG(QString, in0), Q_ARG(bool, in1));
}

QString Accounts1Adaptor::FindUserById(const QString &in0)
{
    // handle method call org.deepin.dde.Accounts1.FindUserById
    QString out0;
    QMetaObject::invokeMethod(parent(), "FindUserById", Q_RETURN_ARG(QString, out0), Q_ARG(QString, in0));
    return out0;
}

QString Accounts1Adaptor::FindUserByName(const QString &in0)
{
    // handle method call org.deepin.dde.Accounts1.FindUserByName
    QString out0;
    QMetaObject::invokeMethod(parent(), "FindUserByName", Q_RETURN_ARG(QString, out0), Q_ARG(QString, in0));
    return out0;
}

QStringList Accounts1Adaptor::GetGroups()
{
    // handle method call org.deepin.dde.Accounts1.GetGroups
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "GetGroups", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

QStringList Accounts1Adaptor::GetPresetGroups(int in0)
{
    // handle method call org.deepin.dde.Accounts1.GetPresetGroups
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "GetPresetGroups", Q_RETURN_ARG(QStringList, out0), Q_ARG(int, in0));
    return out0;
}

bool Accounts1Adaptor::IsPasswordValid(const QString &in0, QString &out1, int &out2)
{
    // handle method call org.deepin.dde.Accounts1.IsPasswordValid
    //return static_cast<YourObjectType *>(parent())->IsPasswordValid(in0, out1, out2);
}

bool Accounts1Adaptor::IsUsernameValid(const QString &in0, QString &out1, int &out2)
{
    // handle method call org.deepin.dde.Accounts1.IsUsernameValid
    //return static_cast<YourObjectType *>(parent())->IsUsernameValid(in0, out1, out2);
}

QString Accounts1Adaptor::RandUserIcon()
{
    // handle method call org.deepin.dde.Accounts1.RandUserIcon
    QString out0;
    QMetaObject::invokeMethod(parent(), "RandUserIcon", Q_RETURN_ARG(QString, out0));
    return out0;
}

